#! /usr/bin/perl -w
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# T2KReWeight configuration script
#
# For help, type ./configure --help
#
# Authors:
# Costas Andreopoulos <costas.andreopoulos \at stfc.ac.uk>
#  STFC - Rutherford Appleton Laboratory, UK
#
# Jim Dobson <j.dobson07 \at imperial.ac.uk>
#  Imperial College London, UK
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# print out info & exit if any of the command-line arguments was --help
#
if(($match = grep(/--help/i, @ARGV)) > 0) {
  print "\n";
  print "*** T2KReWeight configure script *** \n\n";
  print "Usage: ./configure [option]... [flag=value]... \n\n";
  print "    FLAG            DESCRIPTION                                                             DEFAULT\n\n";
  print "    --prefix        installation location (for 'make install')                              /usr/local/\n\n";
  print "enable/disable options with either --enable- or --disable- (eg --enable-genie)\n\n";
  print "    oaanalysis     Enable oaAnalysis - Required to reweight oaanalysis objects   default: disable  \n";
  print "         oaanalysis-lib  Path to libReadoaAnalysis    needed if you --enable-oaanalysis \n";
  print "    neut           Enable NEUT - Required for reweighting neut events            default: disable  \n";
  print "         cern            Path to CERN_ROOT            needed if you --enable-neut \n\n";
  print "    jnubeam        Enable JNuBeam - Required for reweighting jnubeam processes   default: disable  \n";
  print "    genie          Enable GENIE - Required for reweighting genie events          default: disable  \n";
  print "         pythia6-lib     PYTHIA6 library path         needed if you --enable-genie / auto-detected \n";
  print "         lhapdf-inc      Path to LHAPDF includes      needed if you --enable-genie / auto-detected \n";
  print "         lhapdf-lib      Path to LHAPDF libraries     needed if you --enable-genie / auto-detected \n";
  print "         libxml2-inc     Path to libxml2 includes     needed if you --enable-genie / auto-detected \n";
  print "         libxml2-lib     Path to libxml2 library      needed if you --enable-genie / auto-detected \n";
  print "         log4cpp-inc     Path to log4cpp includes     needed if you --enable-genie / auto-detected \n";
  print "         log4cpp-lib     Path to log4cpp library      needed if you --enable-genie / auto-detected \n\n";
  print "    dylibversion    Adds version number in dynamic lib names (recommended)       default: enabled  \n";
  print "    debug           Adds -g in the compiler options to request debug info        default: disabled \n";
  print "with options for 3rd party software, prefix with --with- (eg --with-pythia6-lib=/some/path)\n\n";
  print "    optimiz-level   compiler opitimization level O/O2/O3/OO/Os    default: O2 \n";
  print "    niwg           Enable NIWG - generator independent re-weighting              default: disable  \n";
  print "    geant           Enable GEANT - generator independent re-weighting              default: disable  \n";
  print "    trackerfile     Enable reading in the Tracker file format for BANFF            default: disable  \n";
  print "    psyche          Enable the interface to ND280 analyses.  default: disable \n";
  exit 0;
}

# Check that $T2KREWEIGHT is set
#
$T2KREWEIGHT = $ENV{'T2KREWEIGHT'};
die ("*** Error *** The T2KREWEIGHT environmental variable (pointing to the top level T2KReWeight directory) is not defined")
unless defined $T2KREWEIGHT;

# Check that $ROOTSYS is set
#
$ROOTSYS = $ENV{'ROOTSYS'};
die ("*** Error *** The ROOTSYS environmental variable is not defined. Is ROOT installed?")
unless defined $ROOTSYS;

# Enable auto-detection?
#
system("find $T2KREWEIGHT/configure");
print "\n";
$auto_detect = ($?==0) ? 1 : 0;
if(! $auto_detect) {
     print "\n*** Warn *** Path auto-detection is turned off. You need the 'find' utility to use that feature\n\n";
}

# Open Make.config to write configuration options
#
$MKCONF_FILE = "$T2KREWEIGHT/make/Make.config";
open(MKCONF, ">$MKCONF_FILE") or die("Can not write out the Make.config file!");

print MKCONF "# \n";
print MKCONF "# Make.config \n";
print MKCONF "# This file was automatically generated by the 'configure' script  \n";
print MKCONF "# and is included into the project Makefiles  \n";
print MKCONF "# \n";

# Create a string by joining all the command line arguments
#
my $options = join(" ", @ARGV);

# Get & save installation location (--prefix) or set default
#
my $prefix="/usr/local/";
if(($match = grep(/--prefix/i, @ARGV)) > 0) {
  $options=~m/--prefix=(\S*)/i;
  $prefix = $1;
  if( $T2KREWEIGHT eq $prefix ) {
     print "*** Error *** --prefix can not point to the T2KReWeight top level directory!\n\n";
     exit 1;
  }
}
#print MKCONF "T2KREWEIGHT_INSTALLATION_PATH=$prefix\n";

# Default --enable/--disable config options
#
my $t2krwopt_enable_genie         = "NO";
my $t2krwopt_enable_neut          = "NO";
my $t2krwopt_enable_jnubeam       = "NO";
my $t2krwopt_enable_niwg          = "NO";
my $t2krwopt_enable_geant          = "NO";
my $t2krwopt_enable_oaanalysis    = "NO";
my $t2krwopt_enable_dylibversion  = "YES";
my $t2krwopt_enable_debug         = "NO";
my $t2krwopt_enable_trackerfile   = "NO";
my $t2krwopt_enable_psyche        = "NO";

# Check configure's command line arguments for non-default values
#
if(($match = grep(/--enable-genie/i,         @ARGV)) > 0) { $t2krwopt_enable_genie        = "YES"; }
if(($match = grep(/--enable-neut/i,          @ARGV)) > 0) { $t2krwopt_enable_neut         = "YES"; }
if(($match = grep(/--enable-jnubeam/i,       @ARGV)) > 0) { $t2krwopt_enable_jnubeam      = "YES"; }
if(($match = grep(/--enable-niwg/i,          @ARGV)) > 0) { $t2krwopt_enable_niwg         = "YES"; }
if(($match = grep(/--enable-geant/i,         @ARGV)) > 0) { $t2krwopt_enable_geant        = "YES"; }
if(($match = grep(/--enable-oaanalysis/i,    @ARGV)) > 0) { $t2krwopt_enable_oaanalysis   = "YES"; }
if(($match = grep(/--disable-dylibversion/i, @ARGV)) > 0) { $t2krwopt_enable_dylibversion = "NO";  }
if(($match = grep(/--enable-debug/i,         @ARGV)) > 0) { $t2krwopt_enable_debug        = "YES"; }
if(($match = grep(/--enable-trackerfile/i,   @ARGV)) > 0) { $t2krwopt_enable_trackerfile  = "YES"; }
if(($match = grep(/--enable-psyche/i,        @ARGV)) > 0) { $t2krwopt_enable_psyche       = "YES"; }

my $t2krwopt_with_cxx_debug_flag="";
if($t2krwopt_enable_debug eq "YES") { $t2krwopt_with_cxx_debug_flag = "-g"; }

# Check for --with options:

# Check compiler optimization level
#


my $t2krwopt_with_cxx_optimiz_flag="O2"; # default
if( $options=~m/--with-optimiz-level=(\S*)/i ) {
  $t2krwopt_with_cxx_optimiz_flag = $1;
}

# If --enable-oaanalysis was set then check for libraaries
my $t2krwopt_with_oaanalysis_lib = "";
if($t2krwopt_enable_oaanalysis eq "YES") {

   $t2krwopt_with_oaanalysis_lib = $ENV{'OAANALYSISREADERROOT'} . "/" . $ENV{'OAANALYSISREADERCONFIG'}  ;
   # If specified check it exists
   if(! -d $t2krwopt_with_oaanalysis_lib ) {
       print "*** Error *** Could not locate the oaAnalysis library at " . $t2krwopt_with_oaanalysis_lib . " \n\n";
       exit 1;
   }

} # if --enable-oaanalysis

my $t2krwopt_with_psyche_dirs = "";
my $t2krwopt_with_psyche_config = "";
if($t2krwopt_enable_psyche eq "YES") {

   $t2krwopt_with_psyche_dirs = $ENV{'PSYCHEIOROOT'} . " " .$ENV{'PSYCHECOREROOT'} . " " .$ENV{'PSYCHESYSTEMATICSROOT'} . " " .$ENV{'PSYCHESELECTIONSROOT'} . " " .$ENV{'PSYCHESTEERINGROOT'} . " " .$ENV{'PSYCHEUTILSROOT'} . " " .$ENV{'PSYCHEND280UTILSROOT'} . " " .$ENV{'PSYCHEEVENTMODELROOT'};
   $t2krwopt_with_psyche_config = $ENV{'PSYCHECORECONFIG'};
}
# If --enable-genie was set then some extra paths must be specified

#my $t2krwopt_with_cern_lib    = "";
my $t2krwopt_with_pythia6_lib = "";
my $t2krwopt_with_lhapdf_inc  = "";
my $t2krwopt_with_lhapdf_lib  = "";
my $t2krwopt_with_libxml2_inc = "";
my $t2krwopt_with_libxml2_lib = "";
my $t2krwopt_with_log4cpp_inc = "";
my $t2krwopt_with_log4cpp_lib = "";

if($t2krwopt_enable_genie eq "YES") {

  # Check that $GENIE is set
  #
  $GENIE = $ENV{'GENIE'};
  die ("*** Error *** The GENIE environmental variable (pointing to the top level GENIE directory) is not defined")
  unless defined $GENIE;

   #
   # --with-pythia6-lib
   #
   if($options=~m/--with-pythia6-lib=(\S*)/i) {
     $t2krwopt_with_pythia6_lib = $1;
   } else {
     print "*** Warn *** You didn't specify the PYTHIA6 path \n";
   }
   # if it was not set, try to pick it up from the environment
   if(! -d $t2krwopt_with_pythia6_lib && defined $ENV{'PYTHIA6'}) {
     $t2krwopt_with_pythia6_lib = $ENV{'PYTHIA6'};
     print "The \$PYTHIA6 env var is defined. I will pick that and set --with-pythia6-lib=$t2krwopt_with_pythia6_lib\n";
   }
   # if it still not set, try autodetecting it
   if(! -d $t2krwopt_with_pythia6_lib && $auto_detect)
   {
     print "Autodetecting the PYTHIA6 path...\n";
     $matched = auto_detect("libPythia6*");
     if( $matched=~m/(\S*)\/libPythia6\S*/i ) {
        $t2krwopt_with_pythia6_lib = $1;
     }
     print "Setting --with-pythia6-lib=$t2krwopt_with_pythia6_lib\n";
   }
   if(! -d $t2krwopt_with_pythia6_lib) {
       print "*** Error *** Could not locate the PYTHIA6 library path. Please specify it using --with-pythia6=/some/path/\n\n";
       exit 1;
   }


   #
   # --with-lhapdf-lib=
   #
   if(($match = grep(/--with-lhapdf-lib/i, @ARGV)) > 0) {
     $options=~m/--with-lhapdf-lib=(\S*)/i;
     $t2krwopt_with_lhapdf_lib = $1;
   }
   if(! -d $t2krwopt_with_lhapdf_lib)  {
     print "\n*** Warning *** GENIE has been enabled but you didn't specify the LHAPDF library path \n";
   }
   # if it was not set, try to pick it up from the environment
   if($t2krwopt_with_lhapdf_lib eq "" && defined $ENV{'LHAPDF_LIB'}) {
      $t2krwopt_with_lhapdf_lib = $ENV{'LHAPDF_LIB'};
      print "The \$LHAPDF_LIB env var is defined. I will pick that and use --with-lhapdf-lib=$t2krwopt_with_lhapdf_lib\n";
   }
   # if it still not set, try autodetecting it
   if(! -d $t2krwopt_with_lhapdf_lib && $auto_detect)  {
     print "Auto-detecting LHAPDF library path...\n";
     $matched = auto_detect("libLHAPDF.a");
     if( $matched=~m/(\S*)\/libLHAPDF.a/i ) {
        $t2krwopt_with_lhapdf_lib = $1;
     }
     print "Setting --with-lhapdf-inc=$t2krwopt_with_lhapdf_lib\n";
   }
   # check
   my $lhapdf_a = "$t2krwopt_with_lhapdf_lib/libLHAPDF.a";
   if(! -e $lhapdf_a) {
      print "*** Error *** You need to specify the path to the libLHAPDF.so library using --with-lhapdf-lib=/some/path/\n";
      print "*** Error *** Otherwise, you should --disable-genie\n\n";
      exit 1;
   }

   #
   # --with-lhapdf-inc=
   #
   if(($match = grep(/--with-lhapdf-inc/i, @ARGV)) > 0) {
     $options=~m/--with-lhapdf-inc=(\S*)/i;
     $t2krwopt_with_lhapdf_inc = $1;
   }
   if(! -d $t2krwopt_with_lhapdf_inc)  {
     print "\n*** Warning *** GENIE has been enabled but you didn't specify the LHAPDF include path \n";
   }
   # if it was not set, try to pick it up from the environment
   if($t2krwopt_with_lhapdf_inc eq "" && defined $ENV{'LHAPDF_INC'}) {
      $t2krwopt_with_lhapdf_inc = $ENV{'LHAPDF_INC'};
      print "The \$LHAPDF_INC env var is defined. I will pick that and use --with-lhapdf-inc=$t2krwopt_with_lhapdf_inc\n";
   }
   # if it still not set, try autodetecting it
   if(! -d $t2krwopt_with_lhapdf_inc && $auto_detect)  {
     print "Auto-detecting the LHAPDF include path...\n";
     $matched = auto_detect("LHAPDF.h","LHAPDF/LHAPDF.h");
     print "$t2krwopt_with_lhapdf_inc  \n";
     if( $matched=~m/(\S*)\/LHAPDF\/LHAPDF.h/i ) {
        $t2krwopt_with_lhapdf_inc = $1;
     }
     print "Setting --with-lhapdf-inc=$t2krwopt_with_lhapdf_inc\n";
   }
   # check
   my $lhapdf_h = "$t2krwopt_with_lhapdf_inc/LHAPDF/LHAPDF.h";
   if(! -e $lhapdf_h) {
      print "*** Error *** You need to specify the LHAPDF includes path using --with-lhapdf-inc=/some/path/\n";
      print "*** Error *** Otherwise, you should --disable-genie\n\n";
      exit 1;
   }


   #
   # --with-libxml2-inc=
   #
   if($options=~m/--with-libxml2-inc=(\S*)/i) {
     $t2krwopt_with_libxml2_inc = $1;
   }
   if(! -d $t2krwopt_with_libxml2_inc && $auto_detect)  {
     print "*** Warn *** You didn't specify the libxml2 include path \n";
     print "Autodetecting...\n";
     $matched = auto_detect("xmlmemory.h");
     if( $matched=~m/(\S*)\/libxml\/xmlmemory.h/i ) {
        $t2krwopt_with_libxml2_inc = $1;
     }
     print "Setting --with-libxml2-inc=$t2krwopt_with_libxml2_inc\n";
   }
   if(! -d $t2krwopt_with_libxml2_inc) {
     print "*** Error *** You need to specify the libxml2 include path using --with-libxml2-inc=/some/path/\n\n";
     exit 1;
   }

   #
   # --with-libxml2-lib=
   #
   if($options=~m/--with-libxml2-lib=(\S*)/i) {
     $t2krwopt_with_libxml2_lib = $1;
   }
   if(! -d $t2krwopt_with_libxml2_lib && $auto_detect)  {
     print "*** Warn *** You didn't specify the libxml2 library path \n";
     print "Autodetecting...\n";
     $matched = auto_detect("libxml2.*");
     if( $matched=~m/(\S*)\/libxml2\S*/i ) {
        $t2krwopt_with_libxml2_lib = $1;
     }
     print "Setting --with-libxml2-lib=$t2krwopt_with_libxml2_lib\n";
   }
   if(! -d $t2krwopt_with_libxml2_lib) {
     print "*** Error *** You need to specify the libxml2 library path using --with-libxml2-lib=/some/path/\n\n";
     exit 1;
   }

   #
   # --with-log4cpp-inc=
   #
   if($options=~m/--with-log4cpp-inc=(\S*)/i) {
     $t2krwopt_with_log4cpp_inc = $1;
   }
   if(! -d $t2krwopt_with_log4cpp_inc && $auto_detect)  {
     print "*** Warn *** You didn't specify the log4cpp include path \n";
     print "Autodetecting...\n";
     $matched = auto_detect("OstreamAppender.hh");
     if( $matched=~m/(\S*)\/log4cpp\/OstreamAppender.hh/i ) {
        $t2krwopt_with_log4cpp_inc = $1;
     }
     print "Setting --with-log4cpp-inc=$t2krwopt_with_log4cpp_inc\n";
   }
   if(! -d $t2krwopt_with_log4cpp_inc) {
     print "*** Error *** You need to specify the log4cpp include path using --with-log4cpp-inc=/some/path/\n\n";
     exit 1;
   }

   #
   # --with-log4cpp-lib=
   #
   if($options=~m/--with-log4cpp-lib=(\S*)/i) {
     $t2krwopt_with_log4cpp_lib = $1;
   }
   if(! -d $t2krwopt_with_log4cpp_lib && $auto_detect)  {
     print "*** Warn *** You didn't specify the log4cpp library path \n";
     print "Autodetecting...\n";
     $matched = auto_detect("liblog4cpp.*");
     if( $matched=~m/(\S*)\/liblog4cpp\S*/i ) {
        $t2krwopt_with_log4cpp_lib = $1;
     }
     print "Setting --with-log4cpp-lib=$t2krwopt_with_log4cpp_lib\n";
   }
   if(! -d $t2krwopt_with_log4cpp_lib) {
     print "*** Error *** You need to specify the log4cpp library path using --with-log4cpp-lib=/some/path/\n\n";
     exit 1;
   }

} # if --genie-enabled


# If --enable-neut was set then some extra paths must be specified

my $t2krwopt_with_cern    = "";

if($t2krwopt_enable_neut eq "YES") {

  # Check that $NEUT_ROOT is set
  #
  $NEUT_ROOT = $ENV{'NEUT_ROOT'};
  die ("*** Error *** The NEUT_ROOT environmental variable (pointing to the top level NEUT directory) is not defined")
  unless defined $NEUT_ROOT;

   #
   # --with-cern=
   #
   if($options=~m/--with-cern=(\S*)/i) {
     $t2krwopt_with_cern = $1;
   }
   if(! -d $t2krwopt_with_cern )  {
       print "*** Error *** You need to specify the $CERN_ROOT path using --with-cern=/some/path/\n\n";
     exit 1;
   }
} # if --neut-enabled

# Save config options
#
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_GENIE=$t2krwopt_enable_genie\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_NEUT=$t2krwopt_enable_neut\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_JNUBEAM=$t2krwopt_enable_jnubeam\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_NIWG=$t2krwopt_enable_niwg\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_GEANT=$t2krwopt_enable_geant\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_OAANALYSIS=$t2krwopt_enable_oaanalysis\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_OAANALYSIS_LIB=$t2krwopt_with_oaanalysis_lib\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_DYLIBVERSION=$t2krwopt_enable_dylibversion\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_CXX_DEBUG_FLAG=$t2krwopt_with_cxx_debug_flag\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_CXX_OPTIMIZ_FLAG=-$t2krwopt_with_cxx_optimiz_flag\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_PYTHIA6_LIB=$t2krwopt_with_pythia6_lib\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LHAPDF_INC=$t2krwopt_with_lhapdf_inc\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LHAPDF_LIB=$t2krwopt_with_lhapdf_lib\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LIBXML2_INC=$t2krwopt_with_libxml2_inc\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LIBXML2_LIB=$t2krwopt_with_libxml2_lib\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LOG4CPP_INC=$t2krwopt_with_log4cpp_inc\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_LOG4CPP_LIB=$t2krwopt_with_log4cpp_lib\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_CERN=$t2krwopt_with_cern\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_TRACKERFILE=$t2krwopt_enable_trackerfile\n";
print MKCONF "T2KREWEIGHT_OPTION_ENABLE_PSYCHE=$t2krwopt_enable_psyche\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_PSYCHE_DIRS=$t2krwopt_with_psyche_dirs\n";
print MKCONF "T2KREWEIGHT_OPTION_WITH_PSYCHE_CONFIG=$t2krwopt_with_psyche_config\n";

close(MKCONF);

print "\nYour input configuration options were: @ARGV";
if($#ARGV < 0) { print "(none)" };
print "\n\n";

if(-e $MKCONF_FILE) {
  print "The $T2KREWEIGHT/make/Make.config file has been succesfully generated! \n";
  print "The following config options were set: \n";
  open(MKCONFR, "<$MKCONF_FILE") or die("Can not read back the $T2KREWEIGHT/make/Make.config!");
  @make_conf=<MKCONFR>;
  close(MKCONFR);
# print "@make_conf\n" unless ;
  foreach $setting (@make_conf) {
    chomp($setting);
    if ($setting=~m/\=/) {print "  $setting\n";}
  }

  print "\n";
  print "*** To continue building T2KReWeight type: gmake ";
  # warning for SRT users
  if(defined $ENV{'SRT_ENV_SET'}) {
    print "(Don't forget to 'srt_setup --unsetup' first)";
  }
  print "\n\n";

  exit 0;
}

sub auto_detect {

  @search_dir  = ("/usr","/opt","/lib");           # std search paths
  push (@search_dir,"$ENV{'HOME'}")
                 if defined $ENV{'HOME'};          # add $HOME
  push (@search_dir,"/WorkApp");                   # add where I add ext apps in my MacBookPro
  push (@search_dir,"$ENV{'RSD_TOP_DIR'}")
                 if defined $ENV{'RSD_TOP_DIR'};   # add where RSD puts ext supporting libs

  $search_file = shift;
  foreach(@search_dir) {
     $curr_dir = $_;
     if(! -d $curr_dir) {next;}
     @matches = `find $curr_dir -type f -maxdepth 5 -name $search_file`;
     $nmatches = @matches;
     if( $nmatches > 0) { return $matches[0]; }
  }
  return "";
}
