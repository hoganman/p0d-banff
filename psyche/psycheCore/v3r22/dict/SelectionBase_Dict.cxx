//
// File generated by /physics/software/t2k/ND280/v11r31/ROOT/v5r34p09n04/Linux-x86_64/bin/rootcint at Wed Oct  4 12:19:01 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIdictdISelectionBase_Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SelectionBase_Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void SelectionBase_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SelectionBase(void *p = 0);
   static void *newArray_SelectionBase(Long_t size, void *p);
   static void delete_SelectionBase(void *p);
   static void deleteArray_SelectionBase(void *p);
   static void destruct_SelectionBase(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SelectionBase*)
   {
      ::SelectionBase *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SelectionBase >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SelectionBase", ::SelectionBase::Class_Version(), "./../src/SelectionBase.hxx", 86,
                  typeid(::SelectionBase), DefineBehavior(ptr, ptr),
                  &::SelectionBase::Dictionary, isa_proxy, 4,
                  sizeof(::SelectionBase) );
      instance.SetNew(&new_SelectionBase);
      instance.SetNewArray(&newArray_SelectionBase);
      instance.SetDelete(&delete_SelectionBase);
      instance.SetDeleteArray(&deleteArray_SelectionBase);
      instance.SetDestructor(&destruct_SelectionBase);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SelectionBase*)
   {
      return GenerateInitInstanceLocal((::SelectionBase*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SelectionBase*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *SelectionBase::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SelectionBase::Class_Name()
{
   return "SelectionBase";
}

//______________________________________________________________________________
const char *SelectionBase::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SelectionBase*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SelectionBase::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SelectionBase*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SelectionBase::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SelectionBase*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SelectionBase::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SelectionBase*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void SelectionBase::Streamer(TBuffer &R__b)
{
   // Stream an object of class SelectionBase.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SelectionBase::Class(),this);
   } else {
      R__b.WriteClassBuffer(SelectionBase::Class(),this);
   }
}

//______________________________________________________________________________
void SelectionBase::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SelectionBase.
      TClass *R__cl = ::SelectionBase::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_selEnabledIndex", &_selEnabledIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_detectorFV[20]", _detectorFV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_name", (void*)&_name);
      R__insp.InspectMember("string", (void*)&_name, "_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_title", (void*)&_title);
      R__insp.InspectMember("string", (void*)&_title, "_title.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_enabled", &_enabled);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_presel_accum_cut_level", &_presel_accum_cut_level);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_passed[20][50]", _cut_passed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_current_cut[20]", _current_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_firstSteps", (void*)&_firstSteps);
      R__insp.InspectMember("vector<StepBase*>", (void*)&_firstSteps, "_firstSteps.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_rootStep", &_rootStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_branchAlias", (void*)&_branchAlias);
      R__insp.InspectMember("vector<std::string>", (void*)&_branchAlias, "_branchAlias.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_branchSequence", (void*)&_branchSequence);
      R__insp.InspectMember("vector<std::vector<UInt_t> >", (void*)&_branchSequence, "_branchSequence.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nCutsInBranch", (void*)&_nCutsInBranch);
      R__insp.InspectMember("vector<UInt_t>", (void*)&_nCutsInBranch, "_nCutsInBranch.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nEventsPassed", (void*)&_nEventsPassed);
      R__insp.InspectMember("vector<UInt_t>", (void*)&_nEventsPassed, "_nEventsPassed.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_passed_stats[20][50]", _cut_passed_stats);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_forceBreak", &_forceBreak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_forceFillEventSummary", &_forceFillEventSummary);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_validRunPeriods[10]", _validRunPeriods);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*PreviousToyBox", &PreviousToyBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_maxAccumLevelForAllToys", &_maxAccumLevelForAllToys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_eventBoxId", &_eventBoxId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_initialized", &_initialized);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SelectionBase(void *p) {
      return  p ? new(p) ::SelectionBase : new ::SelectionBase;
   }
   static void *newArray_SelectionBase(Long_t nElements, void *p) {
      return p ? new(p) ::SelectionBase[nElements] : new ::SelectionBase[nElements];
   }
   // Wrapper around operator delete
   static void delete_SelectionBase(void *p) {
      delete ((::SelectionBase*)p);
   }
   static void deleteArray_SelectionBase(void *p) {
      delete [] ((::SelectionBase*)p);
   }
   static void destruct_SelectionBase(void *p) {
      typedef ::SelectionBase current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::SelectionBase

namespace ROOT {
   void vectorlEStepBasemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEStepBasemUgR_Dictionary();
   static void *new_vectorlEStepBasemUgR(void *p = 0);
   static void *newArray_vectorlEStepBasemUgR(Long_t size, void *p);
   static void delete_vectorlEStepBasemUgR(void *p);
   static void deleteArray_vectorlEStepBasemUgR(void *p);
   static void destruct_vectorlEStepBasemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<StepBase*>*)
   {
      vector<StepBase*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<StepBase*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<StepBase*>", -2, "/physics/software/t2k/ND280/v11r31/ROOT/v5r34p09n04/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<StepBase*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEStepBasemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<StepBase*>) );
      instance.SetNew(&new_vectorlEStepBasemUgR);
      instance.SetNewArray(&newArray_vectorlEStepBasemUgR);
      instance.SetDelete(&delete_vectorlEStepBasemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEStepBasemUgR);
      instance.SetDestructor(&destruct_vectorlEStepBasemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<StepBase*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<StepBase*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEStepBasemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<StepBase*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEStepBasemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepBase*> : new vector<StepBase*>;
   }
   static void *newArray_vectorlEStepBasemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<StepBase*>[nElements] : new vector<StepBase*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEStepBasemUgR(void *p) {
      delete ((vector<StepBase*>*)p);
   }
   static void deleteArray_vectorlEStepBasemUgR(void *p) {
      delete [] ((vector<StepBase*>*)p);
   }
   static void destruct_vectorlEStepBasemUgR(void *p) {
      typedef vector<StepBase*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<StepBase*>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/physics/software/t2k/ND280/v11r31/ROOT/v5r34p09n04/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEvectorlEunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<unsigned int> >*)
   {
      vector<vector<unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<unsigned int> >", -2, "/physics/software/t2k/ND280/v11r31/ROOT/v5r34p09n04/Linux-x86_64/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<unsigned int> >) );
      instance.SetNew(&new_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> > : new vector<vector<unsigned int> >;
   }
   static void *newArray_vectorlEvectorlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<unsigned int> >[nElements] : new vector<vector<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete ((vector<vector<unsigned int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      delete [] ((vector<vector<unsigned int> >*)p);
   }
   static void destruct_vectorlEvectorlEunsignedsPintgRsPgR(void *p) {
      typedef vector<vector<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<unsigned int> >

/********************************************************
* ../dict/SelectionBase_Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableSelectionBase_Dict();

extern "C" void G__set_cpp_environmentSelectionBase_Dict() {
  G__cpp_reset_tagtableSelectionBase_Dict();
}
#include <new>
extern "C" int G__cpp_dllrevSelectionBase_Dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SelectionBase */
static int G__SelectionBase_Dict_559_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SelectionBase* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SelectionBase((bool) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SelectionBase((bool) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SelectionBase((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SelectionBase((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new SelectionBase[n];
       } else {
         p = new((void*) gvp) SelectionBase[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new SelectionBase;
       } else {
         p = new((void*) gvp) SelectionBase;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->DefineSteps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->DefineDetectorFV();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SelectionBase*) G__getstructoffset())->MakeToyBox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->InitializeEvent(*(AnaEventC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->FillEventSummary(*(AnaEventC*) libp->para[0].ref, (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SelectionBase*) G__getstructoffset())->GetSampleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetRelevantRecObjectGroupsForSystematic((SystId_h) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetRelevantTrueObjectGroupsForSystematic((SystId_h) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantRecObjectForSystematic(*(AnaEventC*) libp->para[0].ref, (AnaRecObjectC*) G__int(libp->para[1])
, (SystId_h) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantRecObjectForSystematic(*(AnaEventC*) libp->para[0].ref, (AnaRecObjectC*) G__int(libp->para[1])
, (SystId_h) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantTrueObjectForSystematic(*(AnaEventC*) libp->para[0].ref, (AnaTrueObjectC*) G__int(libp->para[1])
, (SystId_h) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantTrueObjectForSystematic(*(AnaEventC*) libp->para[0].ref, (AnaTrueObjectC*) G__int(libp->para[1])
, (SystId_h) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantRecObjectForSystematicInToy(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (AnaRecObjectC*) G__int(libp->para[2]), (SystId_h) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantRecObjectForSystematicInToy(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (AnaRecObjectC*) G__int(libp->para[2]), (SystId_h) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantTrueObjectForSystematicInToy(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (AnaTrueObjectC*) G__int(libp->para[2]), (SystId_h) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantTrueObjectForSystematicInToy(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (AnaTrueObjectC*) G__int(libp->para[2]), (SystId_h) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantSystematic(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (SystId_h) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsRelevantSystematic(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (SystId_h) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->CheckRedoSelection(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->InitializeRootStepFromFirstSteps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->Validate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->Apply(*(AnaEventC*) libp->para[0].ref, *(bool*) G__Boolref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const SelectionBase*) G__getstructoffset())->Title();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const SelectionBase*) G__getstructoffset())->Name();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetTitle(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->Enable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->Disable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsEnabled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->GetForceBreak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->PrintStatistics();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->PrintStatistics(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->PrintStatistics((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->CreateToyBoxArray((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->FinalizeEvent(*(AnaEventC*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->InitializeToy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->FinalizeToy();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((SelectionBase*) G__getstructoffset())->AddStep((StepBase::TypeEnum) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (StepBase*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SelectionBase*) G__getstructoffset())->AddStep((StepBase::TypeEnum) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (StepBase*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((SelectionBase*) G__getstructoffset())->AddStep((Int_t) G__int(libp->para[0]), (StepBase::TypeEnum) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (StepBase*) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->AddStep((Int_t) G__int(libp->para[0]), (StepBase::TypeEnum) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (StepBase*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SelectionBase*) G__getstructoffset())->AddStep((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->AddStep((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (StepBase::TypeEnum) G__int(libp->para[3])
, *(string*) libp->para[4].ref, (StepBase*) G__int(libp->para[5])
, (bool) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->AddStep((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (StepBase::TypeEnum) G__int(libp->para[3])
, *(string*) libp->para[4].ref, (StepBase*) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (StepBase::TypeEnum) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (StepBase*) G__int(libp->para[6]), (bool) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (StepBase::TypeEnum) G__int(libp->para[4]), *(string*) libp->para[5].ref
, (StepBase*) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (StepBase::TypeEnum) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (StepBase*) G__int(libp->para[7])
, (bool) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (StepBase::TypeEnum) G__int(libp->para[5])
, *(string*) libp->para[6].ref, (StepBase*) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (StepBase::TypeEnum) G__int(libp->para[6]), *(string*) libp->para[7].ref
, (StepBase*) G__int(libp->para[8]), (bool) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (StepBase::TypeEnum) G__int(libp->para[6]), *(string*) libp->para[7].ref
, (StepBase*) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (StepBase::TypeEnum) G__int(libp->para[7])
, *(string*) libp->para[8].ref, (StepBase*) G__int(libp->para[9])
, (bool) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (StepBase::TypeEnum) G__int(libp->para[7])
, *(string*) libp->para[8].ref, (StepBase*) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (StepBase::TypeEnum) G__int(libp->para[8]), *(string*) libp->para[9].ref
, (StepBase*) G__int(libp->para[10]), (bool) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((SelectionBase*) G__getstructoffset())->AddStep(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (StepBase::TypeEnum) G__int(libp->para[8]), *(string*) libp->para[9].ref
, (StepBase*) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((SelectionBase*) G__getstructoffset())->AddStep(*(vector<UInt_t>*) libp->para[0].ref, (StepBase::TypeEnum) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (StepBase*) G__int(libp->para[3])
, (bool) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->AddStep(*(vector<UInt_t>*) libp->para[0].ref, (StepBase::TypeEnum) G__int(libp->para[1])
, *(string*) libp->para[2].ref, (StepBase*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->AddStep(*(vector<UInt_t>*) libp->para[0].ref, (StepBase*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->AddSteps(*(vector<UInt_t>*) libp->para[0].ref, *(vector<StepBase*>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      ((SelectionBase*) G__getstructoffset())->AddSplit(
(UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->AddSplit(
(UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->AddSplit(
(UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->AddSplit((UInt_t) G__int(libp->para[0]), *(vector<UInt_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((SelectionBase*) G__getstructoffset())->AddBranch((Int_t) G__int(libp->para[0]), *(vector<UInt_t>*) libp->para[1].ref
, *(string*) libp->para[2].ref);
      G__setnull(result7);
      break;
   case 2:
      ((SelectionBase*) G__getstructoffset())->AddBranch((Int_t) G__int(libp->para[0]), *(vector<UInt_t>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SelectionBase*) G__getstructoffset())->DisableStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SelectionBase*) G__getstructoffset())->DisableStep(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SelectionBase*) G__getstructoffset())->RemoveStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SelectionBase*) G__getstructoffset())->RemoveStep(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SelectionBase*) G__getstructoffset())->ReplaceStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->ReplaceStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SelectionBase*) G__getstructoffset())->InsertStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->InsertStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])
, (StepBase::TypeEnum) G__int(libp->para[2]), *(string*) libp->para[3].ref
, (StepBase*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->CopySteps(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, *(vector<UInt_t>*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((SelectionBase*) G__getstructoffset())->CopySteps(*(SelectionBase*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, *(string*) libp->para[1].ref
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->CopyStep(
*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SelectionBase*) G__getstructoffset())->CopyStep(*(SelectionBase*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(vector<UInt_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(vector<UInt_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(vector<UInt_t>*) libp->para[0].ref);
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranchWithDummy(*(vector<UInt_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranchWithDummy(*(vector<UInt_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranchWithDummy(*(vector<UInt_t>*) libp->para[0].ref);
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(string*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(string*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch(*(string*) libp->para[0].ref);
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranch((UInt_t) G__int(libp->para[0]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetCutsInBranch(*(string*) libp->para[0].ref);
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetCutsInBranch((UInt_t) G__int(libp->para[0]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch(*(vector<UInt_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetLastStepInBranch(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStepInBranch(*(vector<UInt_t>*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStepInBranch(*(string*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStepInBranch((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<StepBase*>* pobj;
         const vector<StepBase*> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepsInBranchValidate((Int_t) G__int(libp->para[0]));
         pobj = new vector<StepBase*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const string* pobj;
         const string xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranchToString(*(vector<UInt_t>*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const string* pobj;
         const string xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranchToString(*(vector<UInt_t>*) libp->para[0].ref);
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 7:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 6:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 5:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch((Int_t) G__int(libp->para[0]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->ConvertBranch();
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias(
(Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SelectionBase*) G__getstructoffset())->SetBranchAlias((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->GetBranchSequence(*(string*) libp->para[0].ref);
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<UInt_t>* pobj;
         const vector<UInt_t> xobj = ((const SelectionBase*) G__getstructoffset())->GetBranchSequence((Int_t) G__int(libp->para[0]));
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetBranchUniqueID(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const SelectionBase*) G__getstructoffset())->GetBranchAlias((Int_t) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->ApplySteps(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, *(string*) libp->para[2].ref, (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->ApplySteps(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, *(string*) libp->para[2].ref, (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->ApplySteps(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, *(string*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->ApplySteps(*(AnaEventC*) libp->para[0].ref, *(ToyBoxB*) libp->para[1].ref
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->GetCutPassed((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->GetCutPassed((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetAccumCutLevel((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetAccumCutLevel());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->InitializeCutLevels();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetMaxAccumCutLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetMaxAccumCutLevelForAllToys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SelectionBase*) G__getstructoffset())->PreSelectionPassed(*(AnaEventC*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetPreSelectionAccumLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetPreSelectionAccumLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetEnabledIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetEnabledIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SelectionBase*) G__getstructoffset())->SetDetectorFV((SubDetId_h) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SelectionBase*) G__getstructoffset())->SetDetectorFV((SubDetId_h) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetDetectorFV((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetDetectorFV());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetEventBoxId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->HasBranch((Int_t) G__int(libp->para[0]), *(string*) libp->para[1].ref));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->HasBranch((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SelectionBase*) G__getstructoffset())->GetNBranches());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepNames((Int_t) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const SelectionBase*) G__getstructoffset())->GetStepNames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const SelectionBase*) G__getstructoffset())->GetCutNames((Int_t) G__int(libp->para[0]));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const vector<std::string>* pobj;
         const vector<std::string> xobj = ((const SelectionBase*) G__getstructoffset())->GetCutNames();
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStep(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetStepAndBranchID(*(string*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SelectionBase*) G__getstructoffset())->GetPreviousStep(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetCutNumber(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetCutNumber(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetStepNumber(*(string*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((const SelectionBase*) G__getstructoffset())->GetStepNumber(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SelectionBase*) G__getstructoffset())->GetNMaxCuts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SelectionBase*) G__getstructoffset())->GetNCuts((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetForceFillEventSummary((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->GetForceFillEventSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const SelectionBase*) G__getstructoffset())->DumpBranches();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const SelectionBase*) G__getstructoffset())->DumpSteps(*(string*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const SelectionBase*) G__getstructoffset())->DumpSteps(*(string*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const SelectionBase*) G__getstructoffset())->DumpSteps();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const SelectionBase*) G__getstructoffset())->DumpSteps((Int_t) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((const SelectionBase*) G__getstructoffset())->DumpSteps((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const SelectionBase*) G__getstructoffset())->DumpCuts((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const SelectionBase*) G__getstructoffset())->DumpCuts();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->SetValidRunPeriods(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const SelectionBase*) G__getstructoffset())->IsValidRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ToyBoxB& obj = ((const SelectionBase*) G__getstructoffset())->GetPreviousToyBox(*(AnaEventC*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const ToyBoxB& obj = ((const SelectionBase*) G__getstructoffset())->GetPreviousToyBox();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SelectionBase::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelectionBase::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SelectionBase::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SelectionBase::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SelectionBase*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelectionBase::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SelectionBase::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SelectionBase::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SelectionBase_Dict_559_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SelectionBase::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SelectionBase_Dict_559_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SelectionBase* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SelectionBase(*(SelectionBase*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SelectionBase G__TSelectionBase;
static int G__SelectionBase_Dict_559_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SelectionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SelectionBase*) (soff+(sizeof(SelectionBase)*i)))->~G__TSelectionBase();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SelectionBase*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SelectionBase*) (soff))->~G__TSelectionBase();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SelectionBase_Dict_559_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SelectionBase* dest = (SelectionBase*) G__getstructoffset();
   *dest = *(SelectionBase*) libp->para[0].ref;
   const SelectionBase& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SelectionBase */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSelectionBase_Dict {
 public:
  G__Sizep2memfuncSelectionBase_Dict(): p(&G__Sizep2memfuncSelectionBase_Dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSelectionBase_Dict::*p)();
};

size_t G__get_sizep2memfuncSelectionBase_Dict()
{
  G__Sizep2memfuncSelectionBase_Dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSelectionBase_Dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase))) {
     SelectionBase *G__Lderived;
     G__Lderived=(SelectionBase*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase),G__get_linked_tagnum(&G__SelectionBase_DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSelectionBase_Dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SubDetId_h",105,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SampleId_h",105,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("SystId_h",105,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EventBoxId_h",105,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<AnaBunchC*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StepBase*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<UInt_t> >",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<UInt_t> >",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SelectionBase */
static void G__setup_memvarSelectionBase(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase));
   { SelectionBase *p; p=(SelectionBase*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_selEnabledIndex=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("SubDetId_h"),-1,2,"_detectorFV[20]=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_string),-1,-1,2,"_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_string),-1,-1,2,"_title=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_enabled=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_presel_accum_cut_level=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_cut_passed[20][50]=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_current_cut[20]=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR),G__defined_typename("vector<StepBase*>"),-1,2,"_firstSteps=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase),-1,-1,2,"_rootStep=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,2,"_branchAlias=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<UInt_t> >"),-1,2,"_branchSequence=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,2,"_nCutsInBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,2,"_nEventsPassed=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_cut_passed_stats[20][50]=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_forceBreak=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_forceFillEventSummary=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_validRunPeriods[10]=",0,"!");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__SelectionBase_DictLN_ToyBoxB),-1,-1,2,"PreviousToyBox=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"_maxAccumLevelForAllToys=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("EventBoxId_h"),-1,2,"_eventBoxId=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"_initialized=",0,"!");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSelectionBase_Dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSelectionBase(void) {
   /* SelectionBase */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase));
   G__memfunc_setup("SelectionBase",1313,G__SelectionBase_Dict_559_0_1, 105, G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase), -1, 0, 2, 1, 1, 0, 
"g - - 0 'true' forceBreak i - 'Int_t' 0 'UNASSIGNEDID' eventBoxId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineSteps",1114,G__SelectionBase_Dict_559_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", "= 0;    ", (void*) NULL, 1);
   G__memfunc_setup("DefineDetectorFV",1569,G__SelectionBase_Dict_559_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "= 0;    ", (void*) NULL, 1);
   G__memfunc_setup("MakeToyBox",995,G__SelectionBase_Dict_559_0_4, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_ToyBoxB), -1, 0, 0, 1, 1, 0, "", "= 0;", (void*) NULL, 1);
   G__memfunc_setup("InitializeEvent",1556,G__SelectionBase_Dict_559_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AnaEventC' - 1 - -", "= 0;", (void*) NULL, 1);
   G__memfunc_setup("FillEventSummary",1655,G__SelectionBase_Dict_559_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'AnaEventC' - 1 - - I - 'Int_t' 0 - -", "= 0;", (void*) NULL, 1);
   G__memfunc_setup("GetSampleId",1071,G__SelectionBase_Dict_559_0_7, 105, -1, G__defined_typename("SampleId_h"), 0, 0, 1, 1, 0, "", "= 0;", (void*) NULL, 1);
   G__memfunc_setup("GetRelevantRecObjectGroupsForSystematic",3999,G__SelectionBase_Dict_559_0_8, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'SystId_h' 0 - - I - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRelevantTrueObjectGroupsForSystematic",4133,G__SelectionBase_Dict_559_0_9, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'SystId_h' 0 - - I - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRelevantRecObjectForSystematic",3259,G__SelectionBase_Dict_559_0_10, 103, -1, -1, 0, 4, 1, 1, 8, 
"u 'AnaEventC' - 11 - - U 'AnaRecObjectC' - 0 - - "
"i - 'SystId_h' 0 - syst_index i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRelevantTrueObjectForSystematic",3393,G__SelectionBase_Dict_559_0_11, 103, -1, -1, 0, 4, 1, 1, 8, 
"u 'AnaEventC' - 11 - - U 'AnaTrueObjectC' - 0 - - "
"i - 'SystId_h' 0 - syst_index i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRelevantRecObjectForSystematicInToy",3758,G__SelectionBase_Dict_559_0_12, 103, -1, -1, 0, 5, 1, 1, 8, 
"u 'AnaEventC' - 11 - - u 'ToyBoxB' - 11 - - "
"U 'AnaRecObjectC' - 0 - - i - 'SystId_h' 0 - syst_index "
"i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRelevantTrueObjectForSystematicInToy",3892,G__SelectionBase_Dict_559_0_13, 103, -1, -1, 0, 5, 1, 1, 8, 
"u 'AnaEventC' - 11 - - u 'ToyBoxB' - 11 - - "
"U 'AnaTrueObjectC' - 0 - - i - 'SystId_h' 0 - syst_index "
"i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsRelevantSystematic",2083,G__SelectionBase_Dict_559_0_14, 103, -1, -1, 0, 4, 1, 1, 8, 
"u 'AnaEventC' - 11 - - u 'ToyBoxB' - 11 - - "
"i - 'SystId_h' 0 - syst_index i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckRedoSelection",1806,G__SelectionBase_Dict_559_0_15, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'AnaEventC' - 11 - - u 'ToyBoxB' - 11 - PreviousToyBox "
"i - 'Int_t' 1 - redoFromStep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialize",1042,G__SelectionBase_Dict_559_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeRootStepFromFirstSteps",3325,G__SelectionBase_Dict_559_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Validate",810,G__SelectionBase_Dict_559_0_18, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Apply",518,G__SelectionBase_Dict_559_0_19, 103, -1, -1, 0, 2, 1, 1, 0, 
"u 'AnaEventC' - 1 - event g - - 1 - redo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Title",514,G__SelectionBase_Dict_559_0_20, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Name",385,G__SelectionBase_Dict_559_0_22, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTitle",814,G__SelectionBase_Dict_559_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__SelectionBase_Dict_559_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Enable",583,G__SelectionBase_Dict_559_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disable",692,G__SelectionBase_Dict_559_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnabled",871,G__SelectionBase_Dict_559_0_27, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetForceBreak",1268,G__SelectionBase_Dict_559_0_28, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatistics",1592,G__SelectionBase_Dict_559_0_29, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatistics",1592,G__SelectionBase_Dict_559_0_30, 121, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatistics",1592,G__SelectionBase_Dict_559_0_31, 121, -1, -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateToyBoxArray",1720,G__SelectionBase_Dict_559_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FinalizeEvent",1332,G__SelectionBase_Dict_559_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'AnaEventC' - 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeToy",1358,G__SelectionBase_Dict_559_0_34, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinalizeToy",1134,G__SelectionBase_Dict_559_0_35, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_37, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i 'StepBase::TypeEnum' - 0 - type "
"u 'string' - 11 - title U 'StepBase' - 0 - step "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_38, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_39, 121, -1, -1, 0, 7, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i 'StepBase::TypeEnum' - 0 - type "
"u 'string' - 11 - title U 'StepBase' - 0 - step "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_40, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i - 'Int_t' 0 - b3 "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_41, 121, -1, -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i - 'Int_t' 0 - b3 "
"i - 'Int_t' 0 - b4 i 'StepBase::TypeEnum' - 0 - type "
"u 'string' - 11 - title U 'StepBase' - 0 - step "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_42, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i - 'Int_t' 0 - b3 "
"i - 'Int_t' 0 - b4 i - 'Int_t' 0 - b5 "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_43, 121, -1, -1, 0, 11, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i - 'Int_t' 0 - b3 "
"i - 'Int_t' 0 - b4 i - 'Int_t' 0 - b5 "
"i - 'Int_t' 0 - b6 i 'StepBase::TypeEnum' - 0 - type "
"u 'string' - 11 - title U 'StepBase' - 0 - step "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_44, 121, -1, -1, 0, 12, 1, 1, 0, 
"i - 'Int_t' 0 - b0 i - 'Int_t' 0 - b1 "
"i - 'Int_t' 0 - b2 i - 'Int_t' 0 - b3 "
"i - 'Int_t' 0 - b4 i - 'Int_t' 0 - b5 "
"i - 'Int_t' 0 - b6 i - 'Int_t' 0 - b7 "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_45, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq i 'StepBase::TypeEnum' - 0 - type "
"u 'string' - 11 - title U 'StepBase' - 0 - step "
"g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStep",677,G__SelectionBase_Dict_559_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq U 'StepBase' - 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSteps",792,G__SelectionBase_Dict_559_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq u 'vector<StepBase*,allocator<StepBase*> >' 'vector<StepBase*>' 11 - steps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSplit",789,G__SelectionBase_Dict_559_0_48, 121, -1, -1, 0, 9, 1, 1, 0, 
"h - 'UInt_t' 0 - nbranches i - 'Int_t' 0 '-1' b0 "
"i - 'Int_t' 0 '-1' b1 i - 'Int_t' 0 '-1' b2 "
"i - 'Int_t' 0 '-1' b3 i - 'Int_t' 0 '-1' b4 "
"i - 'Int_t' 0 '-1' b5 i - 'Int_t' 0 '-1' b6 "
"i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSplit",789,G__SelectionBase_Dict_559_0_49, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - nbranches u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBranch",855,G__SelectionBase_Dict_559_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - ibranch u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq "
"u 'string' - 11 '\"\"' alias", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisableStep",1104,G__SelectionBase_Dict_559_0_51, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - title i - 'Int_t' 0 '-1' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveStep",1034,G__SelectionBase_Dict_559_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - title i - 'Int_t' 0 '-1' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReplaceStep",1112,G__SelectionBase_Dict_559_0_53, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 11 - old_title i - 'Int_t' 0 - ID "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InsertStep",1041,G__SelectionBase_Dict_559_0_54, 121, -1, -1, 0, 6, 1, 1, 0, 
"u 'string' - 11 - previous_title i - 'Int_t' 0 - ID "
"i 'StepBase::TypeEnum' - 0 - type u 'string' - 11 - title "
"U 'StepBase' - 0 - step g - - 0 'false' cut_break", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySteps",938,G__SelectionBase_Dict_559_0_55, 121, -1, -1, 0, 12, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 h - 'UInt_t' 0 - branchID1 "
"h - 'UInt_t' 0 - first h - 'UInt_t' 0 - last "
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySteps",938,G__SelectionBase_Dict_559_0_56, 121, -1, -1, 0, 12, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 u 'string' - 11 - sbranch1 "
"h - 'UInt_t' 0 - first h - 'UInt_t' 0 - last "
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySteps",938,G__SelectionBase_Dict_559_0_57, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 h - 'UInt_t' 0 - branchID1 "
"h - 'UInt_t' 0 - first h - 'UInt_t' 0 - last "
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySteps",938,G__SelectionBase_Dict_559_0_58, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 u 'string' - 11 '\"trunk\"' sbranch1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyStep",823,G__SelectionBase_Dict_559_0_59, 121, -1, -1, 0, 11, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 u 'string' - 11 - sbranch1 "
"h - 'UInt_t' 0 - istep i - 'Int_t' 0 '-1' b0 "
"i - 'Int_t' 0 '-1' b1 i - 'Int_t' 0 '-1' b2 "
"i - 'Int_t' 0 '-1' b3 i - 'Int_t' 0 '-1' b4 "
"i - 'Int_t' 0 '-1' b5 i - 'Int_t' 0 '-1' b6 "
"i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyStep",823,G__SelectionBase_Dict_559_0_60, 121, -1, -1, 0, 10, 1, 1, 0, 
"u 'SelectionBase' - 1 - sel1 h - 'UInt_t' 0 - istep "
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsInBranch",1588,G__SelectionBase_Dict_559_0_61, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 3, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq h - 'UInt_t' 0 '0' first "
"h - 'UInt_t' 0 'NMAXSTEPS-1' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsInBranchWithDummy",2524,G__SelectionBase_Dict_559_0_62, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 3, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq h - 'UInt_t' 0 '0' first "
"h - 'UInt_t' 0 'NMAXSTEPS-1' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsInBranch",1588,G__SelectionBase_Dict_559_0_63, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 3, 1, 1, 8, 
"u 'string' - 11 - branch h - 'UInt_t' 0 '0' first "
"h - 'UInt_t' 0 'NMAXSTEPS-1' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsInBranch",1588,G__SelectionBase_Dict_559_0_64, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ID h - 'UInt_t' 0 '0' first "
"h - 'UInt_t' 0 'NMAXSTEPS-1' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutsInBranch",1476,G__SelectionBase_Dict_559_0_65, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 1, 1, 1, 8, "u 'string' - 11 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutsInBranch",1476,G__SelectionBase_Dict_559_0_66, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastStepInBranch",1877,G__SelectionBase_Dict_559_0_67, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 8, 1, 1, 8, 
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastStepInBranch",1877,G__SelectionBase_Dict_559_0_68, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 1, 1, 1, 8, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastStepInBranch",1877,G__SelectionBase_Dict_559_0_69, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 1, 1, 1, 8, "u 'string' - 11 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepInBranch",1473,G__SelectionBase_Dict_559_0_70, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch_seq h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepInBranch",1473,G__SelectionBase_Dict_559_0_71, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"u 'string' - 11 - branch h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepInBranch",1473,G__SelectionBase_Dict_559_0_72, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - ID h - 'UInt_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepsInBranchValidate",2398,G__SelectionBase_Dict_559_0_73, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR), G__defined_typename("vector<StepBase*>"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertBranchToString",2153,G__SelectionBase_Dict_559_0_74, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_string), -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - branch i - 'Int_t' 0 '-1' upToSplit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertBranch",1327,G__SelectionBase_Dict_559_0_75, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 0, 8, 1, 1, 8, 
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchAlias",1380,G__SelectionBase_Dict_559_0_76, 121, -1, -1, 0, 10, 1, 1, 0, 
"i - 'Int_t' 0 - ID u 'string' - 11 - name "
"i - 'Int_t' 0 '-1' b0 i - 'Int_t' 0 '-1' b1 "
"i - 'Int_t' 0 '-1' b2 i - 'Int_t' 0 '-1' b3 "
"i - 'Int_t' 0 '-1' b4 i - 'Int_t' 0 '-1' b5 "
"i - 'Int_t' 0 '-1' b6 i - 'Int_t' 0 '-1' b7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchSequence",1703,G__SelectionBase_Dict_559_0_77, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchSequence",1703,G__SelectionBase_Dict_559_0_78, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchUniqueID",1650,G__SelectionBase_Dict_559_0_79, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'string' - 11 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranchAlias",1368,G__SelectionBase_Dict_559_0_80, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_string), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplySteps",1045,G__SelectionBase_Dict_559_0_81, 103, -1, -1, 0, 5, 1, 1, 0, 
"u 'AnaEventC' - 1 - event u 'ToyBoxB' - 1 - box "
"u 'string' - 11 - branch i - 'Int_t' 0 '0' ifirst "
"i - 'Int_t' 0 'NMAXSTEPS' ilast", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplySteps",1045,G__SelectionBase_Dict_559_0_82, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'AnaEventC' - 1 - event u 'ToyBoxB' - 1 - box "
"i - 'Int_t' 0 - firstStepToApply", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutPassed",1196,G__SelectionBase_Dict_559_0_83, 103, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - icut i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAccumCutLevel",1581,G__SelectionBase_Dict_559_0_84, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCutLevels",1961,G__SelectionBase_Dict_559_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxAccumCutLevel",1875,G__SelectionBase_Dict_559_0_86, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxAccumCutLevelForAllToys",2882,G__SelectionBase_Dict_559_0_87, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreSelectionPassed",1837,G__SelectionBase_Dict_559_0_88, 103, -1, -1, 0, 1, 1, 1, 0, "u 'AnaEventC' - 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPreSelectionAccumLevel",2522,G__SelectionBase_Dict_559_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - presel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreSelectionAccumLevel",2510,G__SelectionBase_Dict_559_0_90, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnabledIndex",1487,G__SelectionBase_Dict_559_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnabledIndex",1475,G__SelectionBase_Dict_559_0_92, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetectorFV",1282,G__SelectionBase_Dict_559_0_93, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'SubDetId_h' 0 - det i - 'Int_t' 0 '-1' ibranch", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDetectorFV",1270,G__SelectionBase_Dict_559_0_94, 105, -1, G__defined_typename("SubDetId_h"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' ibranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventBoxId",1272,G__SelectionBase_Dict_559_0_95, 105, -1, G__defined_typename("EventBoxId_h"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasBranch",874,G__SelectionBase_Dict_559_0_96, 103, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - ibranch u 'string' - 11 '\"HasBranch\"' fromMethod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBranches",1172,G__SelectionBase_Dict_559_0_97, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepNames",1200,G__SelectionBase_Dict_559_0_98, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' ibranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutNames",1088,G__SelectionBase_Dict_559_0_99, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 '0' ibranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStep",700,G__SelectionBase_Dict_559_0_100, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"u 'string' - 11 - title i - 'Int_t' 0 '0' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepAndBranchID",1706,G__SelectionBase_Dict_559_0_101, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"u 'string' - 11 - title i - 'Int_t' 1 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreviousStep",1561,G__SelectionBase_Dict_559_0_102, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_StepBase), -1, 0, 2, 1, 1, 8, 
"u 'string' - 11 - title i - 'Int_t' 0 - ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCutNumber",1205,G__SelectionBase_Dict_559_0_103, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - title i - 'Int_t' 0 '0' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStepNumber",1317,G__SelectionBase_Dict_559_0_104, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"u 'string' - 11 - title i - 'Int_t' 0 '0' ID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMaxCuts",1075,G__SelectionBase_Dict_559_0_105, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCuts",781,G__SelectionBase_Dict_559_0_106, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceFillEventSummary",2450,G__SelectionBase_Dict_559_0_107, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetForceFillEventSummary",2438,G__SelectionBase_Dict_559_0_108, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpBranches",1212,G__SelectionBase_Dict_559_0_109, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpSteps",933,G__SelectionBase_Dict_559_0_110, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'string' - 11 '\"\"' branch g - - 0 'false' onlycuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpSteps",933,G__SelectionBase_Dict_559_0_111, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - ID g - - 0 'false' onlycuts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpCuts",821,G__SelectionBase_Dict_559_0_112, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 '-1' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidRunPeriods",1831,G__SelectionBase_Dict_559_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - runPeriods", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidRun",993,G__SelectionBase_Dict_559_0_114, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - runPeriod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreviousToyBox",1762,G__SelectionBase_Dict_559_0_115, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_ToyBoxB), -1, 1, 1, 1, 1, 9, "u 'AnaEventC' - 11 - event", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreviousToyBox",1762,G__SelectionBase_Dict_559_0_116, 117, G__get_linked_tagnum(&G__SelectionBase_DictLN_ToyBoxB), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SelectionBase_Dict_559_0_117, 85, G__get_linked_tagnum(&G__SelectionBase_DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SelectionBase::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SelectionBase_Dict_559_0_118, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelectionBase::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SelectionBase_Dict_559_0_119, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SelectionBase::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SelectionBase_Dict_559_0_120, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SelectionBase::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__SelectionBase_DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SelectionBase_Dict_559_0_124, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SelectionBase_Dict_559_0_125, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelectionBase::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SelectionBase_Dict_559_0_126, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SelectionBase::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SelectionBase_Dict_559_0_127, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SelectionBase::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SelectionBase_Dict_559_0_128, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SelectionBase::DeclFileLine) ), 0);
   G__memfunc_setup("AddBranchUniqueID",1627,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<StepBase*,allocator<StepBase*> >' 'vector<StepBase*>' 1 - steps h - 'UInt_t' 0 - ibranch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyStep",930,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 2, 0, 
"u 'AnaEventC' - 1 - event u 'ToyBoxB' - 1 - box "
"u 'StepBase' - 11 - step i - 'Int_t' 0 '-1' branch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyStepRecursive",1882,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 4, 1, 2, 0, 
"u 'AnaEventC' - 1 - event u 'ToyBoxB' - 1 - box "
"u 'StepBase' - 11 - step i - 'Int_t' 0 - firstStepToApply", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CutPassed",908,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 2, 0, 
"g - - 0 - passed i - 'Int_t' 0 - branch "
"u 'ToyBoxB' - 1 - box", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CutPassed",908,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 2, 0, 
"g - - 0 - ok u 'StepBase' - 11 - step "
"u 'ToyBoxB' - 1 - box", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SelectionBase", 1313, G__SelectionBase_Dict_559_0_134, (int) ('i'), G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase), -1, 0, 1, 1, 1, 0, "u 'SelectionBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SelectionBase", 1439, G__SelectionBase_Dict_559_0_135, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SelectionBase_Dict_559_0_136, (int) ('u'), G__get_linked_tagnum(&G__SelectionBase_DictLN_SelectionBase), -1, 1, 1, 1, 1, 0, "u 'SelectionBase' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSelectionBase_Dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSelectionBase_Dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSelectionBase_Dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SelectionBase_DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_ToyBoxB = { "ToyBoxB" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_AnaTrueObjectC = { "AnaTrueObjectC" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_AnaRecObjectC = { "AnaRecObjectC" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR = { "vector<AnaBunchC*,allocator<AnaBunchC*> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<AnaBunchC*,allocator<AnaBunchC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_AnaEventC = { "AnaEventC" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_StepBase = { "StepBase" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_StepBasecLcLTypeEnum = { "StepBase::TypeEnum" , 101 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR = { "vector<StepBase*,allocator<StepBase*> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StepBase*,allocator<StepBase*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_SelectionBase = { "SelectionBase" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR = { "vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >" , 99 , -1 };
G__linked_taginfo G__SelectionBase_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<unsigned int,allocator<unsigned int> >,allocator<vector<unsigned int,allocator<unsigned int> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSelectionBase_Dict() {
  G__SelectionBase_DictLN_TClass.tagnum = -1 ;
  G__SelectionBase_DictLN_TBuffer.tagnum = -1 ;
  G__SelectionBase_DictLN_TMemberInspector.tagnum = -1 ;
  G__SelectionBase_DictLN_TObject.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_string.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SelectionBase_DictLN_ToyBoxB.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__SelectionBase_DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__SelectionBase_DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__SelectionBase_DictLN_AnaTrueObjectC.tagnum = -1 ;
  G__SelectionBase_DictLN_AnaRecObjectC.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SelectionBase_DictLN_AnaEventC.tagnum = -1 ;
  G__SelectionBase_DictLN_StepBase.tagnum = -1 ;
  G__SelectionBase_DictLN_StepBasecLcLTypeEnum.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_SelectionBase.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__SelectionBase_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSelectionBase_Dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TObject);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_string);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_ToyBoxB);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_AnaTrueObjectC);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_AnaRecObjectC);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEAnaBunchCmUcOallocatorlEAnaBunchCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_AnaEventC);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_StepBase);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_StepBasecLcLTypeEnum);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEStepBasemUcOallocatorlEStepBasemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEStepBasemUcOallocatorlEStepBasemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_SelectionBase),sizeof(SelectionBase),-1,292096,(char*)NULL,G__setup_memvarSelectionBase,G__setup_memfuncSelectionBase);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_vectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__SelectionBase_DictLN_reverse_iteratorlEvectorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOallocatorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupSelectionBase_Dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSelectionBase_Dict()");
  G__set_cpp_environmentSelectionBase_Dict();
  G__cpp_setup_tagtableSelectionBase_Dict();

  G__cpp_setup_inheritanceSelectionBase_Dict();

  G__cpp_setup_typetableSelectionBase_Dict();

  G__cpp_setup_memvarSelectionBase_Dict();

  G__cpp_setup_memfuncSelectionBase_Dict();
  G__cpp_setup_globalSelectionBase_Dict();
  G__cpp_setup_funcSelectionBase_Dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSelectionBase_Dict();
  return;
}
class G__cpp_setup_initSelectionBase_Dict {
  public:
    G__cpp_setup_initSelectionBase_Dict() { G__add_setup_func("SelectionBase_Dict",(G__incsetup)(&G__cpp_setupSelectionBase_Dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSelectionBase_Dict() { G__remove_setup_func("SelectionBase_Dict"); }
};
G__cpp_setup_initSelectionBase_Dict G__cpp_setup_initializerSelectionBase_Dict;

